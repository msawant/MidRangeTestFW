#include "LCDTestCase.hpp"

#include <stdio.h>
#include <ti/pspiom/cslr/cslr.h>
#include <ti/pspiom/cslr/soc_OMAPL138.h>
#include <ti/pspiom/cslr/cslr_gpio.h>
#include <ti/pspiom/cslr/cslr_syscfg1_OMAPL138.h>
#include <ti/pspiom/cslr/cslr_psc_OMAPL138.h>
#include <drivers/gpio.h>

CSL_Syscfg1RegsOvly   sys_lcd_Regs  = (CSL_Syscfg1RegsOvly)(CSL_SYSCFG_0_REGS);
CSL_PscRegsOvly      psc1_lcd_Regs = (CSL_PscRegsOvly)(CSL_PSC_1_REGS);
CSL_GpioRegsOvly     gpio_lcd_Regs = (CSL_GpioRegsOvly)(CSL_GPIO_0_REGS);

volatile Uint32 temp = 0;
int input_command;
int input_value;
int BANK = 10;
volatile Uint32 temp1;
short int A0=0;
short int Rd_bar = 0;
short int Wr_bar = 0;
volatile Uint32 delay = 0x2;
Uint16 test = 0;

volatile Uint16 CSL_GPIO_SET_DATA_SET_MASK = 0;
volatile Uint16 CSL_GPIO_SET_DATA_SET_SHIFT = 0;
volatile Uint16 CSL_GPIO_DIR_DIR_SHIFT = 0;
volatile Uint16 CSL_GPIO_CLR_DATA_CLR_MASK = 0;
volatile Uint16 CSL_GPIO_CLR_DATA_CLR_SHIFT = 0;


//const unsigned char Horse [55][110] = {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x04,0x13,0x03,0x00,0x0E,0x13,0x01,0x0B,0x01,0x06,0x04,0x04,0x00,0x03,0x08,0x06,0x06,0x08,0x0D,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x11,0x0D,0x00,0x14,0x00,0x00,0x03,0x00,0x04,0x00,0x19,0x00,0x00,0x0D,0x00,0x00,0x14,0x00,0x00,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x19,0x06,0x00,0x00,0x00,0x55,0x69,0x60,0x4B,0x03,0x0D,0x00,0x0D,0x19,0x05,0x08,0x0B,0x00,0x04,0x11,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x0B,0x08,0x65,0xB0,0xFF,0xFF,0xF9,0xFF,0x93,0x97,0x11,0x0E,0x04,0x00,0x05,0x00,0x00,0x03,0x03,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x01,0x00,0x2F,0x47,0xC3,0xE7,0xF8,0xFF,0xFB,0xFF,0xD8,0xB6,0xB5,0xB4,0x00,0x00,0x1A,0x00,0x09,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,0x14,0x0F,0x00,0x82,0xFF,0xFF,0xFF,0xFF,0xF8,0xF0,0xFE,0xF2,0xFF,0x14,0x11,0x04,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x25,0x0B,0x45,0xFC,0xFF,0x1C,0xDD,0xF1,0xFF,0xF6,0xFC,0xF4,0xFF,0xFF,0xBE,0x17,0x08,0x01,0x00,0x04,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0x2E,0xF9,0xFF,0xFE,0xFC,0xF2,0xFF,0xFF,0xF6,0xF8,0xF4,0xFF,0xF8,0xFF,0xF9,0xE9,0xE9,0x97,0x04,0x00,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x03,0x04,0x04,0x04,0x04,0x04,0x05,0xFE,0xED,0xED,0xFC,0xF2,0xFF,0xE2,0xFF,0xF4,0xF6,0xFC,0xFF,0xFF,0xFF,0xFB,0xC5,0x77,0xEB,0x44,0x11,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x03,0x04,0x00,0x56,0xFF,0xFF,0x86,0xFF,0xFF,0xFF,0xFC,0xF6,0xF3,0xFF,0xF0,0xFC,0xF8,0xFF,0xFF,0xFE,0xFF,0x3B,0x00,0x04,0x0B,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x0D,0x00,0x4B,0x2A,0x01,0x5E,0x45,0x47,0xED,0xF6,0xEC,0xF6,0xF6,0xF6,0xED,0xE8,0xFB,0xFF,0x9C,0x22,0x05,0x00,0x05,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x04,0x00,0x00,0x03,0x08,0xE5,0xED,0xFF,0xFC,0xFF,0xF1,0xFF,0xFF,0xC9,0x11,0x1C,0x00,0x05,0x03,0x03,0x04,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x0B,0x11,0x09,0x0F,0x04,0x0B,0x0C,0xBA,0xFF,0xE3,0xFF,0xF8,0xE7,0xFF,0xF8,0xF4,0xFF,0xA2,0x03,0x1D,0x0B,0x11,0x00,0x08,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x03,0x04,0x04,0x04,0x00,0x00,0x00,0x00,0x0D,0x00,0x11,0xD3,0xCF,0x27,0xFF,0xF2,0xFC,0xFC,0xF9,0xFF,0xFF,0xF8,0x73,0x01,0x00,0x00,0x0E,0x00,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x04,0x04,0x04,0x05,0x05,0x06,0x06,0x06,0x1C,0x00,0x08,0x05,0x00,0x21,0xC5,0xF4,0x48,0xFF,0xE8,0xFE,0xF3,0xFE,0xFF,0xF2,0xA8,0xFF,0x76,0x01,0x0E,0x00,0x11,0x00,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x06,0x06,0x06,0x08,0x08,0x08,0x08,0x08,0x03,0x0D,0x00,0x00,0x2C,0xC5,0xFF,0xF9,0xFF,0xF1,0xFE,0xFF,0xF2,0xFF,0xE9,0xF0,0x51,0x59,0x36,0x01,0x00,0x0F,0x04,0x04,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x04,0x05,0x05,0x04,0x04,0x08,0x08,0x00,0x93,0xB6,0x00,0x09,0x0D,0x17,0x00,0x1A,0x00,0x39,0xFF,0xFC,0xF4,0xF0,0xF8,0xF3,0xF6,0xF3,0xF6,0xFF,0xF0,0xFF,0x60,0x01,0x0D,0x00,0x0F,0x0D,0x04,0x04,0x00,0x00,0x0C,0x0C,0x01,0x09,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x04,0x05,0x06,0x04,0x15,0x87,0xF3,0xFF,0xB4,0x0B,0x0D,0x00,0x0B,0x04,0x11,0xF0,0xE9,0xF2,0xF6,0xFF,0xFF,0xFE,0xFC,0xFF,0xFB,0xF8,0xF8,0xFF,0x97,0x00,0x05,0x08,0x17,0x0E,0x00,0x11,0x06,0x1C,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x00,0x00,0x01,0x04,0x06,0x09,0x00,0x93,0xF1,0xFF,0xF4,0xFC,0xA4,0x08,0x16,0x0D,0xE7,0xEB,0xFF,0xFF,0xFF,0xFF,0xEC,0xFC,0xF6,0xFF,0xE9,0xFE,0xF6,0xFC,0xFC,0x8F,0x11,0x09,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0xEE,0x0D,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x04,0x06,0x08,0x09,0x6D,0xFF,0xD1,0xF0,0xF8,0xF6,0xFF,0x5A,0xD7,0xED,0xFF,0xFB,0xDE,0xF4,0xF3,0xFF,0xFC,0xFF,0xEB,0xFF,0xFC,0xFF,0xFF,0xBC,0x0D,0x13,0x06,0x01,0x00,0x0D,0x11,0x1A,0x1A,0xF0,0x00,0x41,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x04,0x06,0x06,0x05,0x05,0x11,0x97,0xCE,0x00,0xA0,0xE5,0xFC,0xFB,0xF9,0xFF,0xFC,0xEE,0xFF,0xFF,0xFC,0xFF,0xF6,0xFF,0xFC,0xF3,0xF0,0xFF,0xFF,0xFC,0xF0,0x2E,0x1D,0x04,0x05,0x00,0x00,0x00,0x1A,0xF8,0x0D,0x6D,0xF3,0x06,0x14,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x06,0x08,0x08,0x05,0x04,0x5C,0xFC,0x32,0x00,0x00,0x80,0xFF,0x97,0xCB,0xE8,0xFF,0xFF,0xFF,0xFF,0xFC,0xFF,0xFB,0xF6,0xF1,0xD9,0x7E,0xE9,0xF8,0x58,0x8E,0x50,0x03,0x04,0x11,0x03,0x09,0x08,0x9D,0xFF,0x7E,0xFF,0x59,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x04,0x04,0x05,0x06,0x08,0x08,0x27,0xFF,0xCB,0x99,0xCB,0xAC,0xEB,0xC9,0xC3,0xFC,0xFB,0xFF,0xFF,0xFF,0xFF,0xF4,0xFF,0xF0,0xFF,0x7D,0x00,0x2A,0xFF,0xAE,0x00,0x14,0x00,0x0B,0x11,0x00,0x04,0x00,0x95,0xE3,0xFF,0x47,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x03,0x01,0x04,0x05,0x08,0x0B,0xEB,0xF6,0xFF,0xFF,0xFF,0xF9,0xFF,0xF8,0xFF,0xFF,0xFF,0xEE,0xFF,0xFC,0xF4,0xFF,0xFB,0xFF,0xE9,0xF0,0x60,0x03,0x1C,0x26,0x08,0x00,0x0B,0x00,0x00,0x05,0x11,0x04,0x95,0xFF,0xF2,0x00,0x0B,0x04,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x08,0x01,0x03,0x01,0x01,0x26,0xFF,0xEE,0xFF,0xF6,0xFF,0xF6,0xFC,0xEE,0xF6,0xFE,0xFF,0xEB,0xF6,0xFF,0xF0,0xFB,0xFF,0xF8,0xFF,0xF8,0x62,0x0B,0x00,0x0B,0x04,0x00,0x13,0x01,0x00,0x0D,0x05,0x11,0x00,0xC9,0xF2,0x1C,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x03,0x00,0x04,0x00,0x01,0x2A,0xFF,0xDD,0xFF,0x00,0xC3,0xD2,0xE1,0xFF,0xEC,0xFF,0xF2,0xFF,0xFF,0xF0,0xFF,0xFF,0xFC,0xFB,0xF8,0xF4,0xFF,0x53,0x01,0x00,0x0F,0x28,0x00,0x0C,0x14,0x00,0x04,0x0D,0x0F,0xB2,0xFC,0xF8,0xDB,0x06,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x04,0x00,0x01,0x2C,0xFF,0xFF,0xE6,0x8A,0x00,0x0D,0x0F,0xDE,0xFF,0xF1,0xF8,0xFF,0xF8,0xFF,0xFF,0xF0,0xE5,0xFF,0xFF,0xFC,0xEC,0xFF,0x67,0x0D,0x00,0x04,0x16,0x03,0x11,0x00,0x04,0x14,0x04,0xBB,0xF9,0xFF,0xC1,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x04,0x04,0x04,0x26,0xE4,0xAE,0xFC,0xFF,0x1C,0x05,0x13,0x21,0xCB,0xF9,0xFF,0xF0,0xFF,0xFF,0xFF,0xFC,0xFF,0xF8,0xFF,0xF0,0xFB,0xF2,0xFF,0x78,0x1C,0x00,0x06,0x04,0x00,0x00,0x00,0x05,0x00,0xC7,0xFF,0xE9,0xD9,0x00,0x0D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x04,0x0C,0x04,0x19,0x3D,0x0B,0xBD,0xF8,0x05,0x11,0x00,0x00,0x40,0x58,0xEE,0xFF,0xFB,0xF9,0xED,0xFF,0xFF,0xF2,0xFE,0xFF,0xF4,0xFF,0xEB,0xFF,0xA5,0x65,0x00,0x11,0x06,0x08,0x04,0x04,0x08,0xAC,0xFF,0xFF,0xDC,0x08,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x04,0x0E,0x03,0x0D,0x00,0x11,0x9C,0xF9,0x08,0x16,0x00,0x01,0x00,0x00,0x26,0xFB,0xF8,0xF8,0xFF,0xEE,0xEC,0xFF,0xFF,0xFB,0xFF,0xFC,0xFF,0xFF,0xFF,0xEC,0x68,0x00,0x08,0x0D,0x0B,0x14,0x11,0xA7,0xFF,0xFF,0xC9,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x04,0x00,0x04,0x0B,0x00,0x09,0x11,0x00,0xBB,0xF9,0xE3,0x00,0x16,0x0B,0x0E,0x00,0x00,0x28,0xFF,0xF8,0xF9,0xF6,0xFF,0xF4,0xFF,0xFF,0xFF,0xFF,0xF6,0xFC,0xFF,0xFB,0xEC,0x38,0x09,0x00,0x00,0x08,0x00,0xBB,0xFF,0xFC,0xD6,0x04,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x03,0x03,0x00,0x03,0x06,0x00,0x0B,0x08,0x0B,0x8E,0xE4,0xF6,0xEC,0x11,0x01,0x00,0x05,0x00,0x00,0x32,0xE3,0xFF,0xF1,0xFF,0xFC,0xF8,0xFF,0xFF,0xFF,0xFF,0xED,0xFF,0xF8,0xFE,0xFC,0x43,0x00,0x11,0x00,0x08,0xB3,0xBA,0xFC,0xB9,0x00,0x0D,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x04,0x04,0x04,0x04,0x00,0x0C,0x00,0xFC,0xE2,0x00,0x13,0x14,0x00,0x04,0x04,0x0C,0x3B,0xF2,0xF8,0xFF,0xFC,0xFF,0xFF,0xF0,0xF8,0xFF,0xF9,0xF4,0xFF,0xEB,0xEE,0xFF,0x0B,0x00,0x14,0xBA,0xF1,0x38,0xFF,0x00,0x13,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x03,0x04,0x04,0x00,0x1C,0x06,0x04,0x80,0xE1,0x15,0x08,0x04,0x05,0x04,0x08,0x04,0x00,0x44,0xE7,0xFF,0xF0,0xFF,0xF1,0xFC,0xFF,0xF8,0xFF,0xFC,0xF3,0xF6,0xFF,0xF8,0x75,0x76,0xBE,0xFE,0xF6,0xFE,0x75,0x11,0x09,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x03,0x03,0x03,0x04,0x00,0x04,0x09,0x00,0x0F,0x56,0x03,0x00,0x03,0x00,0x03,0x0B,0x06,0x09,0x09,0xD6,0xFF,0xFF,0xFF,0xF2,0xFF,0xFF,0xF4,0xFF,0xFC,0xF9,0xFF,0xF3,0xF8,0xFF,0xFB,0xFE,0xE1,0xFF,0x5C,0x0E,0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x03,0x0C,0x00,0x14,0x00,0x00,0x00,0x00,0x09,0x05,0x00,0x01,0x05,0x08,0x17,0x00,0xA4,0xFF,0xFF,0xF8,0xF2,0xFF,0xE2,0xFC,0xF9,0xF0,0xFF,0xE9,0xFF,0xFB,0xE6,0xFB,0xFE,0xFF,0x53,0x00,0x00,0x01,0x00,0x05,0x0D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x05,0x00,0x00,0x00,0x00,0x08,0x0E,0x01,0x00,0x0F,0x0E,0x00,0x06,0x00,0x1D,0xE1,0xF9,0xEE,0xFF,0xFF,0xFF,0xF8,0xFF,0xF1,0xFC,0xF4,0xFE,0xE2,0xF8,0xFE,0xFC,0xFC,0xEC,0xF3,0x26,0x00,0x14,0x17,0x06,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x09,0x00,0x01,0xFF,0xED,0xFF,0xDB,0xD6,0xFF,0xF6,0xFC,0xF2,0xFF,0xEE,0xFC,0xFF,0x05,0xED,0xEE,0xFF,0x4F,0x00,0x06,0x00,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x04,0x08,0x09,0x08,0x00,0x00,0x0D,0x00,0x05,0x19,0x03,0x00,0x00,0x1E,0x03,0xA9,0xF9,0xEC,0xAE,0xAC,0xF6,0xF6,0xFF,0xE5,0xFF,0xFE,0xF8,0xB9,0x05,0xFF,0xF8,0xDE,0x2E,0x11,0x00,0x06,0x14,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x08,0x00,0x03,0x00,0x03,0x0F,0x04,0x0D,0x09,0x00,0x04,0x15,0x08,0x00,0x0D,0x06,0xFF,0xF1,0xF4,0xF8,0xFF,0xFF,0xE8,0xFF,0xF6,0xFF,0xFF,0x08,0x11,0x90,0xD9,0x21,0x08,0x0D,0x03,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x06,0x09,0x08,0x00,0x00,0x08,0x04,0x0D,0x00,0x08,0x14,0x00,0x08,0x08,0x09,0x68,0xFF,0xFC,0xEE,0xFF,0xFE,0xFF,0xF1,0xFF,0xA9,0x52,0x1C,0x03,0xA0,0xB3,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x04,0x0F,0x2A,0x4F,0xCD,0xC9,0xCB,0xD1,0x7A,0x14,0x08,0x00,0x04,0x00,0x40,0xFB,0xFF,0xFF,0xF6,0xFC,0xFF,0x9B,0x0F,0x08,0x00,0x11,0xFF,0x1F,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x0D,0x08,0x04,0x00,0x00,0x00,0x0B,0xB2,0xFB,0xFF,0xFF,0xFC,0xE8,0xF0,0xF2,0xE4,0xF8,0xF0,0xF8,0xFC,0xF8,0xFF,0xF8,0xD1,0x13,0x00,0x0E,0x08,0x00,0x1E,0x00,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x08,0x13,0x0F,0xAC,0xE3,0xD9,0xE6,0xE2,0xE1,0xE7,0xFF,0xF3,0xFF,0xFF,0xED,0xEC,0xE9,0xFF,0x09,0x0D,0x09,0x0B,0x0D,0x05,0x05,0x0D,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x09,0x09,0x04,0x00,0x03,0x08,0x09,0x0B,0x0F,0x03,0x01,0x00,0x00,0x00,0x00,0xA7,0xB7,0xCE,0xEE,0x3F,0xBB,0xF8,0xFF,0xDE,0x04,0x0D,0x00,0x05,0x14,0x08,0x09,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x06,0x04,0x09,0x0D,0x03,0x04,0x04,0x00,0x09,0x0C,0x00,0x00,0x1C,0x11,0x04,0x24,0x82,0x3F,0x65,0xFF,0xFC,0xC9,0x39,0x0D,0x11,0x00,0x00,0x0E,0x00,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x04,0x06,0x01,0x00,0x09,0x13,0x08,0x0D,0x15,0x00,0x00,0x16,0x14,0x00,0x04,0x04,0x00,0x03,0x03,0x13,0x08,0xD9,0xFF,0xFC,0xC1,0x00,0x00,0x00,0x04,0x11,0x01,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x03,0x00,0x05,0x08,0x00,0x0C,0x00,0x04,0x0D,0x00,0x00,0x08,0x06,0x00,0x0E,0x00,0x0D,0x00,0x97,0xF9,0xF6,0x34,0x1F,0x0D,0x08,0x08,0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x11,0x03,0x82,0xF9,0xFC,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1A,0x00,0x6F,0xFF,0xF0,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x2E,0x79,0xFC,0xDA,0x0C,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7B,0xFF,0xEE,0xFF,0x56,0x0D,0x0D,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x75,0x54,0x78,0x60,0x26,0x08,0x04,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x1A,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x14,0x00,0x09,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}};
const unsigned char Test [8][128] = {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x39,0x39,0x39,0xFF,0xFF,0xEF,0xEF,0x00,0xF8,0xFC,0xFE,0xFE,0x8E,0x8E,0xFE,0xFE,0xFC,0xF8,0x00,0xF8,0xFC,0xFE,0xFE,0x8E,0x0E,0x0E,0x8E,0x00,0xFF,0xFF,0xFF,0xFF,0x30,0xFC,0xFE,0xFE,0xCE,0x06,0x00,0x3E,0xFE,0xFE,0xF8,0xE0,0xFE,0xFE,0x1E,0xFE,0xFE,0xC0,0xFC,0xFE,0xFE,0x0E,0x30,0xFC,0xFC,0xFE,0xAE,0x26,0x3E,0x3E,0x3C,0x30,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xF0,0xF0,0x70,0xF0,0xF0,0xF0,0xC0,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x80,0x80,0xF3,0xF3,0xF3,0xF3,0x80,0x00,0x00,0x83,0x83,0x83,0x83,0x82,0x80,0x81,0x03,0x03,0x03,0x83,0x83,0x83,0x81,0x80,0x80,0x80,0x81,0x83,0x03,0x83,0x83,0x83,0x83,0x00,0x03,0x03,0x83,0x83,0x80,0x80,0x83,0x83,0x83,0x03,0x02,0x80,0x83,0xF3,0xF3,0xF3,0xF3,0x81,0x80,0x03,0xB3,0xB3,0xB3,0xB3,0x01,0x00,0x00,0x81,0x81,0x83,0x83,0x83,0x83,0x03,0x03,0x00,0x80,0x83,0x83,0x83,0x03,0x80,0x83,0x83,0x83,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF8,0xFE,0xFF,0x7F,0x1F,0x1C,0x1C,0x1F,0xFF,0xFF,0xFE,0xF8,0x80,0x7F,0xFF,0xFF,0xFF,0xE0,0x60,0xFF,0xFF,0xFF,0xFF,0x00,0x01,0x01,0xFF,0xFF,0xFF,0xFF,0x01,0x0C,0x3F,0x7F,0xFF,0xFF,0xE1,0xF3,0xFF,0x7F,0x7F,0x1E,0x00,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0x00,0x70,0xF9,0xFD,0xFD,0xCD,0x6D,0xFF,0xFF,0xFF,0xFE,0x01,0x01,0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x3E,0x7F,0x7F,0xFF,0xE1,0xE1,0xFF,0x7F,0x7F,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,0x01,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}};
const unsigned char Scope [] = {
0x00, 0x00, 0x00, 0x00, 0x20, 0x54, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x18, 0xA1, 0xF0, 0x44, 0x08, 0x00,
0x00, 0x00, 0x20, 0x00, 0x00, 0x40, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x40, 0x10, 0x40, 0x0E, 0x0A, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x30, 0x2E, 0x22, 0x11, 0x02, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x53, 0x44, 0x04, 0x00, 0x04, 0x07, 0x00, 0x80,
0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
0x10, 0x00, 0x04, 0x00, 0x04, 0x00, 0x40, 0xA6, 0xDA, 0x5A, 0x84, 0x24, 0x84, 0x02, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0xBA, 0x01,
0x01, 0x02, 0xAC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x03, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
0x00, 0x00, 0x00, 0x0C, 0xA2, 0x1B, 0x72, 0x26, 0x23, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00,
0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x30, 0x00, 0x05, 0x00, 0x01, 0x04, 0xA2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x20, 0x80,
0x00, 0x00, 0xB8, 0x6A, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x2C, 0xDA, 0x02, 0x00, 0x5A,
0xC4, 0x00, 0x00, 0x00, 0x3A, 0x02, 0x00, 0x02, 0x90, 0x24, 0x00, 0x00, 0x64, 0x8A, 0x22, 0x00,
0x24, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x81, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00,
0x80, 0x80, 0x00, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x80,
0x00, 0x80, 0x82, 0x81, 0x80, 0x00, 0x00, 0x81, 0x80, 0x80, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00,
0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x10, 0x80, 0x00, 0x00, 0x00, 0x80,
0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x00, 0x80, 0x80, 0xA0, 0x20, 0x80, 0x81, 0x00, 0x80, 0x00,
0xA0, 0x90, 0x80, 0x80, 
};

const unsigned char test1 [] = {
0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x40, 0x80, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0xC0, 0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
0x40, 0x00, 0x80, 0xC0, 0x60, 0x60, 0xE0, 0x80, 0xA0, 0x80, 0x40, 0x80, 0x00, 0x00, 0x00, 0x80,
0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x60, 0xA0, 0x00, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x08, 0xC8, 0x70, 0x26, 0x88, 0x12, 0xE2, 0x20, 0x60, 0x80, 0x00, 0x02, 0x00, 0x20, 0x00, 0x00,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x40, 0xCC, 0x7A, 0x52, 0x66, 0x3B, 0x98, 0x9C, 0x63, 0x18, 0x00, 0x00,
0x82, 0x8A, 0x66, 0x3D, 0xC4, 0x76, 0x2C, 0x40, 0xA0, 0x85, 0xE0, 0x28, 0x03, 0x05, 0x00, 0x00,
0x80, 0x18, 0xC6, 0xAA, 0x20, 0x09, 0x16, 0x15, 0x40, 0x42, 0x40, 0xD0, 0x20, 0x34, 0x18, 0x97,
0xBD, 0x42, 0xBD, 0xE7, 0x5A, 0x00, 0x81, 0x3D, 0x36, 0x91, 0x25, 0x18, 0x0B, 0x06, 0x22, 0x0D,
0x2D, 0xD8, 0x70, 0x0D, 0xB4, 0x12, 0x01, 0x16, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0xF3, 0xF1, 0x39, 0x1F, 0x1F, 0x1F, 0xF1, 0x95, 0xAA, 0x5A, 0xB4, 0xEC, 0x4C, 0xA0, 0x50,
0x20, 0x81, 0x40, 0x02, 0x00, 0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x8F, 0xC0, 0x3F, 0x11, 0x14, 0x08, 0x32, 0x1A, 0x42, 0x70, 0x14, 0x80,
0x00, 0x38, 0x22, 0x6E, 0x95, 0x02, 0x1A, 0x0D, 0x20, 0x7F, 0x98, 0xFB, 0x65, 0x00, 0x00, 0x26,
0xA4, 0x2A, 0xCB, 0xD5, 0x90, 0x44, 0x84, 0x02, 0x59, 0x67, 0x70, 0x89, 0x00, 0x00, 0x00, 0x06,
0x00, 0x1E, 0x3E, 0x71, 0xCF, 0x1F, 0x01, 0x61, 0x91, 0xC0, 0x20, 0xC0, 0x40, 0x80, 0xE0, 0x88,
0x52, 0x9F, 0x28, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3A, 0xC2, 0x79, 0x40, 0x30, 0x0D, 0x0C, 0x10, 0x28, 0x09, 0x11, 0x05, 0x64, 0x41, 0x43, 0x46,
0x4B, 0x72, 0x02, 0x20, 0x00, 0x0C, 0x02, 0x54, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0D, 0x0C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xC1, 0x80, 0xC0,
0x80, 0x40, 0xC4, 0x01, 0x00, 0x83, 0x00, 0x00, 0x00, 0x01, 0x00, 0x82, 0x81, 0x00, 0x00, 0x00,
0x01, 0x05, 0x82, 0x03, 0xC6, 0x05, 0xC0, 0x85, 0x81, 0x07, 0xCA, 0x02, 0x00, 0x00, 0x00, 0x80,
0x83, 0x40, 0x83, 0x01, 0x80, 0x40, 0x81, 0x40, 0x80, 0x02, 0x01, 0x03, 0x00, 0x02, 0x00, 0x06,
0x04, 0x00, 0x80, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x2D, 0x85, 0x36, 0x03, 0x68, 0x70, 0x00, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x08, 0x04, 0x18, 0x48, 0x16, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x2C, 0xD0, 0x3F, 0xA4, 0x99, 0x67, 0x98,
0x84, 0x01, 0x9A, 0xA5, 0x20, 0x4A, 0x19, 0x00, 0x00, 0x5C, 0x21, 0xEE, 0x30, 0x0A, 0x0A, 0x38,
0x28, 0x17, 0xD0, 0x4C, 0x69, 0x96, 0x04, 0x87, 0x81, 0x4D, 0x48, 0xEF, 0x39, 0xC4, 0x3D, 0x66,
0x96, 0xAD, 0x26, 0x5D, 0x03, 0x0F, 0x01, 0x56, 0xA8, 0x32, 0x42, 0x30, 0x40, 0xC0, 0x38, 0x6C,
0xE0, 0x0E, 0x20, 0x19, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x48, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x2F, 0x59, 0xAE, 0x17, 0x00,
0x09, 0xCD, 0x91, 0xA4, 0x52, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xB4, 0x43, 0x21, 0xC0, 0x00, 0x80, 0x80, 0xAA,
0xA8, 0x4A, 0xE4, 0xD2, 0x20, 0xC0, 0x18, 0x63, 0x06, 0x15, 0x01, 0x07, 0x00, 0x0E, 0x0F, 0x10,
0x24, 0x1B, 0x86, 0xBC, 0x10, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00,
0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x07, 0x04, 0x04,
0x04, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x03, 0x02, 0x08, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0E, 0x01, 0x01, 0x03, 0x00, 0x00, 0x02, 0x03, 0x02, 0x06, 0x05, 0x05, 0x02,
0x07, 0x0A, 0x06, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x18, 0x08, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// class constructor
LCDTestCase::LCDTestCase() 
: TestCase(TEST_CASE_ID_LCD)
{
	// do nothing
}

// class destructor
LCDTestCase::~LCDTestCase()
{
}
void LCDTestCase::Run
(
	int16 Argc, 				// number of arguments
	std::string* Argv,			// pointer to array variable argument 
	std::string &rResponseText	// reference string to place the response text 
)
{

	if (Argc == LCD_REQUIRED_ARGS)
	{
		char responseBuffer[32];


		sscanf(Argv[1].c_str(),"%d",&input_command);
		sscanf(Argv[2].c_str(),"%x",&input_value);
		
		switch (input_command)
		{
			case 1:
            clr_gpio(6,12);      //LCD_RST_L=1
            insert_delay(20);
            set_gpio(6,12);      //LCD_RST_L=1
            break;
            
            case 2:
            clr_gpio(6,12);      //LCD_RST_L=0
            insert_delay(20);
            set_gpio(6,12);      //LCD_RST_L=1
            set_value(0xA2);
            set_value(0xA0);
            set_value(0xC0);
            set_value(0x24);
            set_value(0x81);
            set_value(0x20);
            set_value(0x2F);
            set_value(0xAF);
            set_value(0xA5);
            break;
            
            case 3:
            set_value(input_value);
            break;
            
            case 4:
            clr_gpio(6,12);     //LCD_RST_L=0
            insert_delay(150);        //t>5uS
            set_gpio(6,12);     //LCD_RST_L=1
            insert_delay(150);        // t>5uS
            
            set_gpio(0,7);      // LCD BL on
            
            set_value(0xD2);    //Soft Reset
            set_value(0x53);    //Bias Select
            set_value(0x51);    //SEG Dir
            set_value(0xC0);    //COM Dir
            set_value(0x54);  
            set_value(0x56);    //Normal Display not inverse   
            //set_value(0x55);    //All Pixels on
            set_value(0x13);    //Reg Ratio
            set_value(0x41);    //Set EV
            set_value(0x10);
            //set_value(0x30);    
            //set_value(0xF8);    //Set Booster Value
            //set_value(0x00);
            
            set_value(0x1F);    //Power Control: Regulator,Booster, Follower on
            insert_delay(30);
            set_value(0x80);    
            set_value(0x5F);    //Display on
            insert_delay(10);
            //set_value(0x55);    //All Pixels on
            
            break;
		
			case 5:
            set_value(0x41);
            set_value(input_value);
            break;
            
            case 6:
            clr_gpio(6,12);     //LCD_RST_L=1
            insert_delay(10);        //t>5uS
            set_gpio(6,12);     //LCD_RST_L=1
            insert_delay(10);        // t>5uS
            
            set_gpio(0,7);      // LCD BL on
            
            set_value(0xE2);    //Soft Reset
            set_value(0xA3);    //Bias Select
            
            set_value(0xA1);    //SEG Dir
            set_value(0xC0);    //COM Dir
            set_value(0xA4);    //COM Dir
            
            set_value(0xA6);    //Normal Display not inverse   
            
            //set_value(0x55);    //All Pixels on
            
            set_value(0x23);    //Reg Ratio
            
            set_value(0x81);    //Set EV
            set_value(0x20);    
            
            //set_value(0xF8);    //Set Booster Value
            //set_value(0x00);
            
            set_value(0x2F);    //Power Control: Regulator,Booster, Follower on
            set_value(0x40);    
            set_value(0xAF);    //Display on
            insert_delay(0xFF);
            set_value(0xA5);    //All pixels on
            
            clr_gpio(0,7);
            break;
            
            case 7:             // Display Image
            display_image();
            break;
            
            case 8:
            test = read_status();
            break;
            
            case 9:
            clear_image();
            display_image();
            break;
            
            case 10:
            clear_image();
            display_smiley();
            break;      
            
            case 11:
            clear_image();
            break;    
            
            case 12:
            clr_gpio(6,12);     //LCD_RST_L=0
            insert_delay(150);        //t>5uS
            set_gpio(6,12);     //LCD_RST_L=1
            insert_delay(150);        // t>5uS
            
            set_gpio(0,7);      // LCD BL on
            
            set_value(0xE2);    //Soft Reset
            set_value(0xA3);    //Bias Select
            set_value(0xA0);    //SEG Dir
            set_value(0xC8);    //COM Dir
            set_value(0xA4);  
            set_value(0xA6);    //Normal Display not inverse   
            //set_value(0x55);    //All Pixels on
            set_value(0x23);    //Reg Ratio
            set_value(0x81);    //Set EV
            set_value(0x20);
            //set_value(0x30);    
            //set_value(0xF8);    //Set Booster Value
            //set_value(0x00);
            
            set_value(0x2F);    //Power Control: Regulator,Booster, Follower on
            insert_delay(30);
            set_value(0x80);    
            set_value(0xAF);    //Display on
            set_value(0x40);    //Set Start Line
            insert_delay(10);
            //set_value(0x55);    //All Pixels on
            break;
            
            case 13:
            set_data(0xAF);
            break;
            
            default:
			A0=0;
            Rd_bar = 0;
            Wr_bar = 0;
			break;
		}
		

		
		sprintf(responseBuffer, "\n%d %s",TEST_CASE_ID_LCD,"LCD Command Executed\n");

		rResponseText = responseBuffer;
	}
//	// too few or too many parameters
	else
	{
		rResponseText = "-03";
	}
    set_gpio(6,0);       //LCD_SCS0_L = 0
	return;
} 
void set_gpio(int bank, int pin){
    switch (bank)
        {
            case 0:
            BANK = GP0;
            break;
            
            case 1:
            BANK = GP1;
            break;
            
            case 2:
            BANK = GP2;
            break;
            
            case 3:
            BANK = GP3;
            break;
            
            case 4:
            BANK = GP4;
            break;
            
            case 5:
            BANK = GP5;
            break;
            
            case 6:
            BANK = GP6;
            break;
            
            case 7:
            BANK = GP7;
            break;
            
            case 8:
            BANK = GP8;
            break;
            
            default:
            BANK=NULL;
            break;
        }
    switch (pin)
        {
            case 0:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET0_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET0_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR0_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR0_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR0_SHIFT;
            break;
            
            case 1:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET1_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET1_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR0_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR1_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR1_SHIFT;
            break;
            
            case 2:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET2_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET2_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR2_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR2_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR2_SHIFT;
            break;
            
            case 3:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET3_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET3_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR3_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR3_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR3_SHIFT;
            break;
            
            case 4:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET4_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET4_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR4_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR4_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR4_SHIFT;
            break;
            
            case 5:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET5_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET5_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR5_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR5_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR5_SHIFT;
            break;
            
            case 6:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET6_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET6_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR6_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR6_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR6_SHIFT;
            break;
            
            case 7:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET7_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET7_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR7_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR7_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR7_SHIFT;
            break;
            
            case 8:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET8_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET8_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR8_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR8_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR8_SHIFT;
            break;
            
            case 9:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET9_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET9_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR9_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR9_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR9_SHIFT;
            break;
            
            case 10:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET10_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET10_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR10_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR10_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR10_SHIFT;
            break;
            
            case 11:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET11_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET11_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR11_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR11_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR11_SHIFT;
            break;
            
            case 12:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET12_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET12_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR12_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR12_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR12_SHIFT;
            break;
            
            case 13:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET13_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET13_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR13_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR13_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR13_SHIFT;
            break;
        
            case 14:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET14_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET14_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR14_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR14_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR14_SHIFT;
            break;
            
            case 15:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET15_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET15_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR15_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR15_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR15_SHIFT;
            break;
        }
        temp =  ( (temp & CSL_GPIO_SET_DATA_SET_MASK) | (CSL_GPIO_SET_DATA_SET_SET << CSL_GPIO_SET_DATA_SET_SHIFT));
        gpio_lcd_Regs->BANK[BANK].SET_DATA |= temp;
        //printf ("GPIO %d_%d been set high \n", bank, pin);
}
void clr_gpio(int bank, int pin){
    
    switch (bank)
        {
            case 0:
            BANK = GP0;
            break;
            
            case 1:
            BANK = GP1;
            break;
            
            case 2:
            BANK = GP2;
            break;
            
            case 3:
            BANK = GP3;
            break;
            
            case 4:
            BANK = GP4;
            break;
            
            case 5:
            BANK = GP5;
            break;
            
            case 6:
            BANK = GP6;
            break;
            
            case 7:
            BANK = GP7;
            break;
            
            case 8:
            BANK = GP8;
            break;
            
            default:
            BANK=NULL;
            break;
        }
    switch (pin)
        {
            case 0:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET0_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET0_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR0_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR0_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR0_SHIFT;
            break;
            
            case 1:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET1_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET1_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR0_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR1_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR1_SHIFT;
            break;
            
            case 2:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET2_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET2_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR2_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR2_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR2_SHIFT;
            break;
            
            case 3:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET3_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET3_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR3_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR3_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR3_SHIFT;
            break;
            
            case 4:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET4_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET4_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR4_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR4_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR4_SHIFT;
            break;
            
            case 5:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET5_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET5_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR5_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR5_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR5_SHIFT;
            break;
            
            case 6:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET6_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET6_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR6_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR6_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR6_SHIFT;
            break;
            
            case 7:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET7_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET7_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR7_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR7_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR7_SHIFT;
            break;
            
            case 8:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET8_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET8_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR8_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR8_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR8_SHIFT;
            break;
            
            case 9:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET9_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET9_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR9_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR9_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR9_SHIFT;
            break;
            
            case 10:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET10_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET10_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR10_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR10_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR10_SHIFT;
            break;
            
            case 11:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET11_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET11_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR11_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR11_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR11_SHIFT;
            break;
            
            case 12:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET12_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET12_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR12_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR12_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR12_SHIFT;
            break;
            
            case 13:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET13_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET13_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR13_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR13_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR13_SHIFT;
            break;
        
            case 14:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET14_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET14_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR14_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR14_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR14_SHIFT;
            break;
            
            case 15:
            CSL_GPIO_SET_DATA_SET_MASK = CSL_GPIO_SET_DATA_SET15_MASK;
            CSL_GPIO_SET_DATA_SET_SHIFT = CSL_GPIO_SET_DATA_SET15_SHIFT;
            CSL_GPIO_DIR_DIR_SHIFT = CSL_GPIO_DIR_DIR15_SHIFT;
            CSL_GPIO_CLR_DATA_CLR_MASK = CSL_GPIO_CLR_DATA_CLR15_MASK;
            CSL_GPIO_CLR_DATA_CLR_SHIFT = CSL_GPIO_CLR_DATA_CLR15_SHIFT;
            break;
        }
        temp = ( (temp & CSL_GPIO_CLR_DATA_CLR_MASK) |  (CSL_GPIO_CLR_DATA_CLR_CLR << CSL_GPIO_CLR_DATA_CLR_SHIFT) );
        gpio_lcd_Regs->BANK[BANK].CLR_DATA &= temp;
        //printf ("GPIO %d_%d been set low \n", bank, pin);
}
void set_value(int value){
    
//    clr_gpio(6,0);                              //LCD_SCS0_L = 0
//    clr_gpio(8,8);                              //A0=0
//    clr_gpio(8,9);                              //WR_bar = 0
//    GPIO_WriteToGpioBank(BANK7, value<<8);
//    insert_delay(20);
//    set_gpio(8,9);                              //WR_bar = 1
//    insert_delay(20);
//    set_gpio(8,8);                              //A0=1
//    set_gpio(6,0);                              //LCD_SCS0_L = 1
//    insert_delay(20);

    clr_gpio(8,8);                              //A0=0
    insert_delay(1);
    clr_gpio(6,0);                              //LCD_SCS0_L = 0
    clr_gpio(8,9);                              //WR_bar = 0
    insert_delay(1);
    GPIO_WriteToGpioBank(BANK7, value<<8);
    insert_delay(1);
    set_gpio(8,9);                              //WR_bar = 1
    set_gpio(6,0);                              //LCD_SCS0_L = 1
    insert_delay(1);
    set_gpio(8,8);                              //A0=1

    insert_delay(1);

}

void set_ev(int value){
    clr_gpio(8,8);                              //A0=0
    clr_gpio(6,0);                              //LCD_SCS0_L = 0
    set_gpio(8,11);                             //Rd_bar=1;
    clr_gpio(8,9);                              //WR_bar = 0
    GPIO_WriteToGpioBank(BANK7, 0x81<<8);
    GPIO_WriteToGpioBank(BANK7, value<<8);
    set_gpio(8,9);                              //WR_bar = 1
    set_gpio(8,11);                             //Rd_bar=1;
    set_gpio(6,0);                              //LCD_SCS0_L = 1
    set_gpio(8,8);                              //A0=1
}

void insert_delay(Uint32 delay){
    volatile Uint32 test = 0;
    for (Uint32 count = 0; count< delay; count++){
        test++;
        //do nothing
        for(Uint32 temp = 0; temp< delay; temp++){
            test++;
            //do nothing
        }
    }
}

void clear_image(){
               for (int j=0;j<8;j++){
                     set_value(0xB0+j); // Set Page Address 0xB0-0xB7
                     set_value(0x10);   // Set Column Address(double byte instruction) MSB 0x10-0x1F 
                     set_value(0x00);   // Set Column Address(double byte instruction) LSB 0x00-0x0F
                     for(int i=0;i<128;i++)
                     {
                        set_data(0x00);   //All Display zero
                     }
                     
               pixels_off();      
           }
}

void display_image(){
               for (int j=0;j<8;j++){
                     set_value(0xB0+j); // Set Page Address 0xB0-0xB7
                     set_value(0x10);   // Set Column Address(double byte instruction) MSB 0x10-0x1F 
                     set_value(0x00);   // Set Column Address(double byte instruction) LSB 0x00-0x0F
                     for(int i=0;i<128;i++)
                     {
                        set_data(0x0F);   //All Display Random
                     }
                     
               pixels_off();      
           }
}

void display_smiley(){
    //int image[128][8] = {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, {0x38,0x9E,0xB9,0xB9,0x9E,0x67,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDC,0x2A,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0xFF,0xFF,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0x4C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},{0xFF,0x4C,0x0D,0x0C,0x27,0x8A,0xFF,0xFF,0xFF,0x88,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00},{0xC0,0x00,0x01,0x00,0x00,0x00,0x0F,0xAA,0xFF,0xFF,0x75,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00},{0xB4,0x00,0x01,0x01,0x06,0x05,0x01,0x00,0x2A,0xFE,0xFF,0x4D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00}};   
               for (int j=0;j<8;j++){
                     set_value(0xB0+j); // Set Page Address 0xB0-0xB7
                     set_value(0x10);   // Set Column Address(double byte instruction) MSB 0x10-0x1F 
                     set_value(0x00);   // Set Column Address(double byte instruction) LSB 0x00-0x0F
                     for(int i=0;i<128;i++)
                     {
                        set_data(Test[j][i]);   //All Display Random
                     }  
                     }
}
           
void set_data(int value){
    clr_gpio(6,0);                              //LCD_SCS0_L = 0
    set_gpio(8,8);                              //A0=0
    clr_gpio(8,9);                              //WR_bar = 0
    GPIO_WriteToGpioBank(BANK7, value<<8);
    insert_delay(0x4F);
    set_gpio(8,9);                              //WR_bar = 1
    insert_delay(0x4F);
    clr_gpio(8,8);                              //A0=1
    set_gpio(6,0);                              //LCD_SCS0_L = 1
    insert_delay(0x4F);
    
}


Uint16 read_status(){
    Uint16 GPIO_Value=0;
    GPIO_SetPinDirection(BANK7, PIN8, IN);
    GPIO_SetPinDirection(BANK7, PIN9, IN);
    GPIO_SetPinDirection(BANK7, PIN10, IN);
    GPIO_SetPinDirection(BANK7, PIN11, IN);
    GPIO_SetPinDirection(BANK7, PIN12, IN);
    GPIO_SetPinDirection(BANK7, PIN13, IN);
    GPIO_SetPinDirection(BANK7, PIN14, IN);
    GPIO_SetPinDirection(BANK7, PIN15, IN);
    clr_gpio(8,8);                              //A0=0    
    clr_gpio(6,0);                              //LCD_SCS0_L = 0
    set_gpio(8,9);                              //WR_bar = 0
    clr_gpio(8,11);                              //ERD_bar = 0
    GPIO_Value=GPIO_ReadFromGpioBank(BANK7);
    GPIO_SetPinDirection(BANK7, PIN8, OUT);
    GPIO_SetPinDirection(BANK7, PIN9, OUT);
    GPIO_SetPinDirection(BANK7, PIN10, OUT);
    GPIO_SetPinDirection(BANK7, PIN11, OUT);
    GPIO_SetPinDirection(BANK7, PIN12, OUT);
    GPIO_SetPinDirection(BANK7, PIN13, OUT);
    GPIO_SetPinDirection(BANK7, PIN14, OUT);
    GPIO_SetPinDirection(BANK7, PIN15, OUT);
    clr_gpio(8,11);                              //ERD_bar = 0
    set_gpio(8,9);                              //WR_bar = 0
    set_gpio(6,0);                              //LCD_SCS0_L = 0
    set_gpio(8,8);                              //A0=0
    
    printf("Status Register = %x\n",GPIO_Value);
    return GPIO_Value;
}
void pixels_off(){
    set_value(0x54);    //All pixels on
}

void pixels_on(){
    set_value(0x55);    //All pixels on
}

